What happens when you initialize a repository? Why do you need to do it?

	When you initialize a repository you create a .git file that is hidden but contains all the metadata that is created historically for some or all of the files in the repository. This hidden file is available from the command line but otherwise contains data that is typically not useful to the user. This data cannot be created unless a .git file is created with git init. No commits are initially created but one can view the most recent commit with git status.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?